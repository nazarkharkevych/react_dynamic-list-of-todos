{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","onSelectedTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","selectValue","onSelectStatus","onApplyQuery","useState","inputValue","setInputValue","onChange","event","target","value","placeholder","style","pointerEvents","Loader","TodoModal","onCloseModal","todoWithUser","setTodoWithUser","loadUserAndSetTodo","a","userId","user","useEffect","href","email","name","normalizeValue","toLowerCase","App","setTodos","setSelectedTodo","filterStatus","setFilterStatus","appliedQuery","setAppliedQuery","applyQuery","useCallback","callback","timeoutId","clearTimeout","args","debounce","todosFilteredByStatus","useMemo","filter","todosFilteredByTitle","normalizedTitle","normalizedQuery","trim","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83f527f0.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelectedTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    onSelectedTodo,\n    selectedTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': selectedTodo?.id === todo.id },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  { 'fa-eye': selectedTodo?.id !== todo.id },\n                  { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useState } from 'react';\n\ntype Props = {\n  selectValue: string;\n  onSelectStatus: (status: string) => void;\n  onApplyQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    selectValue,\n    onSelectStatus,\n    onApplyQuery,\n  },\n) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInputValue(value);\n    onApplyQuery(value);\n  };\n\n  const handleInputReset = () => {\n    setInputValue('');\n    onApplyQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => onSelectStatus(event.target.value)}\n            value={selectValue}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleInputReset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onCloseModal: () => void;\n};\n\ntype TodoWithUser = Todo & { user: User };\n\nexport const TodoModal: React.FC<Props> = ({ todo, onCloseModal }) => {\n  const [todoWithUser, setTodoWithUser] = useState<TodoWithUser | null>(null);\n\n  const loadUserAndSetTodo = async () => {\n    const user = await getUser(todo.userId);\n\n    setTodoWithUser({\n      ...todo,\n      user,\n    });\n  };\n\n  useEffect(() => {\n    loadUserAndSetTodo();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todoWithUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoWithUser.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCloseModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoWithUser.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todoWithUser.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${todoWithUser.user.email}`}>\n                {todoWithUser.user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useMemo,\n  useState,\n  Dispatch,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst normalizeValue = (value: string) => value.toLowerCase();\n\nconst debounce = (callback: Dispatch<string>, delay: number) => {\n  let timeoutId: number;\n\n  return (...args: string[]) => {\n    clearTimeout(timeoutId);\n\n    timeoutId = setTimeout(callback, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 300),\n    [],\n  );\n\n  const handleOnCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  const todosFilteredByStatus = useMemo(() => {\n    return todos.filter(todo => {\n      switch (filterStatus) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        case 'all':\n        default:\n          return true;\n      }\n    });\n  }, [filterStatus, todos]);\n\n  const todosFilteredByTitle = useMemo(() => {\n    return todosFilteredByStatus.filter(todo => {\n      const normalizedTitle = normalizeValue(todo.title);\n      const normalizedQuery = normalizeValue(appliedQuery.trim());\n\n      return normalizedTitle.includes(normalizedQuery);\n    });\n  }, [todosFilteredByStatus, appliedQuery]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectValue={filterStatus}\n                onSelectStatus={setFilterStatus}\n                onApplyQuery={applyQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={todosFilteredByTitle}\n                onSelectedTodo={setSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseModal={handleOnCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}